{"version":3,"sources":["utils/helpers.js","components/AnsweredQuestion.js","components/AnsweredQuestionPage.js","utils/_Data.js","utils/api.js","actions/users.js","actions/questions.js","components/UnansweredQuestion.js","components/UnansweredQuestionPage.js","components/Dashboard.js","actions/authedUser.js","actions/shared.js","components/NewQuestion.js","components/User.js","components/Leaderboard.js","components/SignInPage.js","components/Navigation.js","components/Signout.js","components/QuestionPage.js","components/SignUpPage.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/questions.js","reducers/users.js","middlewares/logger.js","middlewares/index.js","index.js"],"names":["formatDate","timestamp","d","Date","time","toLocaleTimeString","substr","slice","toLocaleDateString","formatQuestion","question","author","id","optionOne","optionTwo","name","avatar","avatarURL","AnsweredQuestion","_this$props","this","props","authedUser","mode","react_default","a","createElement","firstVoteNumber","votes","length","secondVoteNumber","totalVoteNumber","firstVotePercentage","parseFloat","toFixed","secondVotePercentage","isOptionOneSelected","includes","className","Link","to","fi","concat","src","alt","text","md","color","ProgressBar_default","now","label","Component","withRouter","connect","_ref","_ref2","users","questions","AnsweredQuestionPage","answered_questionIds","map","key","components_AnsweredQuestion","Object","keys","filter","answers","sort","b","sarahedo","8xf0y6ziyjabvozdd253nd","6ni6ok3ym7mf1p33lnez","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","_saveQuestion","Promise","res","rej","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","setTimeout","objectSpread","defineProperty","saveQuestionAnswer","info","_ref3","qid","answer","_saveQuestionAnswer","saveUser","user","formattedUser","username","formatUser","console","log","RECEIVE_USERS","ADD_ANSWER_QUESTION_TO_USER","ADD_QUESTION_CREATED","ADD_USER","handleAddUser","dispatch","showLoading","then","type","addUser","hideLoading","ANSWER_QUESTION","ADD_QUESTION","RECEIVE_QUESTIONS","handleAddQuestion","getState","addQuestion","addQuestionCreated","handleAnswerQuestion","answerQuestion","addAnsweredQuestion","UnansweredQuestion","state","selectedOption","toAnsweredQuestion","handleOptionChange","e","_this","setState","target","value","handleSubmit","preventDefault","_this$props2","Form","onSubmit","Button","variant","block","checked","onClick","disabled","UnansweredQuestionPage","unanswered_questionIds","components_UnansweredQuestion","Dashboard","showing","handleSwitchTab","Nav","fill","onSelect","Item","eventKey","active","components_UnansweredQuestionPage","components_AnsweredQuestionPage","SET_AUTHED_USER","setAuthedUser","handleSignIn","AUTHED_ID","handleInitialData","all","slicedToArray","receiveUsers","receiveQuestions","NewQuestion","toHome","handleChange","_this$state","_this$state2","Redirect","Control","required","placeholder","onChange","User","answered","created","score","Container","Row","Col","xs","Leaderboard","usersId","components_User","SignInPage","usernames","toSignUpPage","signIn","goToSignUp","_this2","DropdownButton","title","Dropdown","href","Navigation","loggedUser","location","pathname","NavLink","SignOut","QuestionPage","isAnswered","match","params","SignUpPage","toSignInPage","fieldName","fieldValue","signUp","Group","Label","App","hasError","error","HashRouter","react","build_default","loading","components_Navigation","Route","path","exact","component","combineReducers","arguments","undefined","action","loadingBar","loadingBarReducer","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.570956ee.chunk.js","sourcesContent":["export function formatDate (timestamp) {\r\n  const d = new Date(timestamp)\r\n  const time = d.toLocaleTimeString('en-US')\r\n  return time.substr(0, 5) + time.slice(-2) + ' | ' + d.toLocaleDateString()\r\n}\r\n\r\nexport function formatQuestion (question, author) {\r\n  const { id, optionOne, optionTwo, timestamp} = question \r\n  const { name, avatarURL } = author\r\n\r\n  return {\r\n    id,\r\n    name,\r\n    avatar: avatarURL,\r\n    timestamp,\r\n    optionOne, \r\n    optionTwo\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { formatQuestion, formatDate } from '../utils/helpers'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { MdStar } from 'react-icons/md'\r\nimport { FiExternalLink, FiMinimize2 } from 'react-icons/fi'\r\n\r\nclass AnsweredQuestion extends Component {\r\n  render() {\r\n    const { question, authedUser, mode } = this.props\r\n\r\n    if (question === null) {\r\n      return <p> This question does not exist </p>\r\n    }\r\n\r\n    const { id, name, avatar, timestamp, optionOne, optionTwo } = question \r\n    const firstVoteNumber = optionOne.votes.length \r\n      ? optionOne.votes.length\r\n      : 0\r\n    const secondVoteNumber = optionTwo.votes.length \r\n      ? optionTwo.votes.length\r\n      : 0\r\n    const totalVoteNumber = firstVoteNumber + secondVoteNumber\r\n    const firstVotePercentage = parseFloat(100 * firstVoteNumber / totalVoteNumber).toFixed(2)\r\n    const secondVotePercentage = parseFloat(100 * secondVoteNumber / totalVoteNumber).toFixed(2)\r\n\r\n    const isOptionOneSelected = optionOne.votes.includes(authedUser)\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card card-question my-2\">\r\n          <div className=\"maximize-div\">\r\n            {\r\n              mode === 'max'\r\n                ? <Link to='/home'>\r\n                    <FiMinimize2 className=\"maximize-icon\" />\r\n                  </Link>\r\n                : <Link to={`/question/${id}`}>\r\n                    <FiExternalLink className=\"maximize-icon\" />\r\n                  </Link>\r\n            }\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Result for</h5>\r\n            <div className=\"question-header\"> \r\n              <img \r\n                src={avatar}\r\n                alt={`Avatar of ${name}`}\r\n                className='avatar'\r\n              />\r\n              <div className=\"header-info\">\r\n                <span>\r\n                  {name}'s question\r\n                </span>\r\n                <div>at {formatDate(timestamp)}</div> \r\n              </div>\r\n            </div>\r\n            <div className=\"result-group-one\">\r\n              <div className=\"option-text\">\r\n                {optionOne.text}\r\n                {\r\n                  isOptionOneSelected\r\n                  ? <MdStar color=\"#d79922\"/>\r\n                  : <div></div>\r\n                }                \r\n              </div>\r\n              <ProgressBar className=\"result-bar\" now={firstVotePercentage} label={`${firstVotePercentage}%`} />\r\n              <p className=\"text-center\">{firstVoteNumber} of {totalVoteNumber} </p>  \r\n            </div>\r\n            <div className=\"result-group-two\">\r\n              <div className=\"option-text\">\r\n                {optionTwo.text}\r\n                {\r\n                  isOptionOneSelected\r\n                  ? <div></div> \r\n                  : <MdStar color=\"#d79922\"/>\r\n                }\r\n              </div>\r\n              <ProgressBar className=\"result-bar\" now={secondVotePercentage} label={`${secondVotePercentage}%`} />\r\n              <p className=\"text-center\">{secondVoteNumber} of {totalVoteNumber} </p> \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({authedUser, users, questions}, { id, mode }) {\r\n  const question = questions[id]\r\n  return {\r\n    authedUser,\r\n    mode,\r\n    question: question\r\n      ? formatQuestion(question, users[question.author])\r\n      : null\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AnsweredQuestion))","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport AnsweredQuestion from './AnsweredQuestion'\r\n\r\nclass AnsweredQuestionPage extends Component {\r\n  render() {    \r\n    return (\r\n      <ul>\r\n      {\r\n        this.props.answered_questionIds.map((id) => (\r\n          <li key={id}>\r\n            <AnsweredQuestion id={id} mode='min' />\r\n          </li>\r\n        ))\r\n      }\r\n      </ul> \r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps ({authedUser, users, questions }){\r\n  const answered_questions = Object.keys(questions)\r\n    .filter(question => Object.keys(users[authedUser].answers).includes(question))\r\n  return {\r\n    answered_questionIds: answered_questions\r\n      .sort((a, b) => questions[b].timestamp - questions[a].timestamp)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AnsweredQuestionPage)","let users = {\r\n  sarahedo: {\r\n    id: 'sarahedo',\r\n    name: 'Sarah Edo',\r\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/sarah.jpg',\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionOne',\r\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\r\n    },\r\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n  },\r\n  tylermcginnis: {\r\n    id: 'tylermcginnis',\r\n    name: 'Tyler McGinnis',\r\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/tyler.jpg',\r\n    answers: {\r\n      \"vthrdm985a262al8qx3do\": 'optionOne',\r\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n    },\r\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n  },\r\n  johndoe: {\r\n    id: 'johndoe',\r\n    name: 'John Doe',\r\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/dan.jpg',\r\n    answers: {\r\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionOne'\r\n    },\r\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n  }\r\n}\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    author: 'sarahedo',\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: ['sarahedo'],\r\n      text: 'have horrible short term memory',\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: 'have horrible long term memory'\r\n    }\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: '6ni6ok3ym7mf1p33lnez',\r\n    author: 'johndoe',\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'become a superhero',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe', 'sarahedo'],\r\n      text: 'become a supervillian'\r\n    }\r\n  },\r\n  \"am8ehyc8byjqgar0jgpub9\": {\r\n    id: 'am8ehyc8byjqgar0jgpub9',\r\n    author: 'sarahedo',\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be telekinetic',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be telepathic'\r\n    }\r\n  },\r\n  \"loxhs1bqm25b708cmbf3g\": {\r\n    id: 'loxhs1bqm25b708cmbf3g',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be a front-end developer',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be a back-end developer'\r\n    }\r\n  },\r\n  \"vthrdm985a262al8qx3do\": {\r\n    id: 'vthrdm985a262al8qx3do',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'find $50 yourself',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe'],\r\n      text: 'have your best friend find $500'\r\n    }\r\n  },\r\n  \"xj352vofupe1dqz9emx13r\": {\r\n    id: 'xj352vofupe1dqz9emx13r',\r\n    author: 'johndoe',\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: ['johndoe'],\r\n      text: 'write JavaScript',\r\n    },\r\n    optionTwo: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'write Swift'\r\n    }\r\n  },\r\n}\r\n\r\nfunction generateUID () {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n}\r\n\r\nexport function _getUsers () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...users}), 1000)\r\n  })\r\n}\r\n\r\nfunction formatUser ({ username, name, avatarURL}) {\r\n  return {\r\n    answers: {},\r\n    avatarURL: avatarURL,\r\n    id: username,\r\n    name: name,\r\n    questions: []\r\n  }\r\n}\r\n\r\nexport function _saveUser(user) {\r\n  return new Promise((res, rej) => {\r\n    const formattedUser= formatUser(user)\r\n\r\n    console.log(formattedUser)\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions\r\n      }\r\n\r\n      users = {\r\n        ...users,\r\n        [formattedUser.id]: formattedUser\r\n      }\r\n\r\n      res(formattedUser)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nexport function _getQuestions () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...questions}), 1000)\r\n  })\r\n}\r\n\r\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    }\r\n  }\r\n}\r\n\r\nexport function _saveQuestion (question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question)\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion\r\n      }\r\n      \r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\r\n        }\r\n      }\r\n\r\n      res(formattedQuestion)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      }\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser])\r\n          }\r\n        }\r\n      }\r\n\r\n      res()\r\n    }, 500)\r\n  })\r\n}","import {\r\n  _getUsers,\r\n  _getQuestions,\r\n  _saveQuestion,\r\n  _saveQuestionAnswer,\r\n  _saveUser\r\n} from './_Data.js'\r\n\r\nexport function getInitialData() {\r\n  return Promise.all([\r\n    _getUsers(),\r\n    _getQuestions(),\r\n  ]).then(([users, questions]) => ({\r\n    users,\r\n    questions\r\n  }))\r\n}\r\n\r\nexport function saveQuestion(info) {\r\n  return _saveQuestion(info)\r\n}\r\n\r\nexport function saveQuestionAnswer(info) {\r\n  return _saveQuestionAnswer(info)\r\n}\r\n\r\nexport function saveUser(info) {\r\n  return _saveUser(info)\r\n}","import { saveUser } from '../utils/api'\r\nimport { showLoading, hideLoading} from  'react-redux-loading'\r\n\r\nexport const RECEIVE_USERS = 'RECEIVE_USERS'\r\nexport const ADD_ANSWER_QUESTION_TO_USER = 'ADD_ANSWER_QUESTION_TO_USER'\r\nexport const ADD_QUESTION_CREATED = 'ADD_QUESTION_CREATED'\r\nexport const ADD_USER = 'ADD_USER'\r\n\r\nexport function receiveUsers (users) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    users\r\n  }\r\n}\r\n\r\nfunction addUser(user) {\r\n  return {\r\n    type: ADD_USER,\r\n    user\r\n  }\r\n}\r\n\r\nexport function handleAddUser (username, name, avatarURL) {\r\n  return (dispatch) => {\r\n    \r\n    dispatch(showLoading())\r\n\r\n    return saveUser({\r\n      username,\r\n      name,\r\n      avatarURL\r\n    })\r\n      .then((user) => (dispatch(addUser(user))))\r\n      .then( () => (dispatch(hideLoading())))\r\n  }\r\n}\r\n\r\nexport function addAnsweredQuestion({ authedUser, qid, answer }) {\r\n  return {\r\n    type: ADD_ANSWER_QUESTION_TO_USER,\r\n    authedUser,\r\n    qid,\r\n    answer\r\n  }\r\n}\r\n\r\nexport function addQuestionCreated( question, authedUser) {\r\n  return {\r\n    type: ADD_QUESTION_CREATED,\r\n    question,\r\n    authedUser\r\n  } \r\n}","import { saveQuestion, saveQuestionAnswer } from '../utils/api'\r\nimport { showLoading, hideLoading} from  'react-redux-loading'\r\nimport { addAnsweredQuestion, addQuestionCreated } from './users'\r\n\r\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\r\nexport const ADD_QUESTION = 'ADD_QUESTION'\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\n\r\nfunction addQuestion(question) {\r\n  return {\r\n    type: ADD_QUESTION,\r\n    question\r\n  }\r\n}\r\n\r\nexport function handleAddQuestion (optionOne, optionTwo) {\r\n  return (dispatch, getState) => {\r\n    const { authedUser } = getState()\r\n\r\n    dispatch(showLoading())\r\n    \r\n    return saveQuestion({\r\n      author: authedUser, \r\n      optionOneText: optionOne,\r\n      optionTwoText: optionTwo\r\n    })\r\n      .then((question) => dispatch(addQuestion(question)))\r\n      .then((question) => dispatch(addQuestionCreated(question, authedUser)))\r\n      .then(() => dispatch(hideLoading()))\r\n  } \r\n}\r\n\r\nexport function receiveQuestions (questions) {\r\n  return {\r\n    type: RECEIVE_QUESTIONS,\r\n    questions\r\n  }\r\n}\r\n\r\nfunction answerQuestion ({ authedUser, qid, answer }) {\r\n  return {\r\n    type: ANSWER_QUESTION,\r\n    qid,\r\n    authedUser,\r\n    answer\r\n  }\r\n}\r\n\r\nexport function handleAnswerQuestion(info){\r\n  return (dispatch, getState) =>  {\r\n    dispatch(showLoading()) \r\n    return saveQuestionAnswer(info)\r\n      .then(() => dispatch(answerQuestion(info)))\r\n      .then(() => dispatch(addAnsweredQuestion(info)))\r\n      .then(() => dispatch(hideLoading()))\r\n  }  \r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { formatQuestion, formatDate } from '../utils/helpers'\r\nimport { handleAnswerQuestion } from '../actions/questions'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { FiExternalLink, FiMinimize2 } from 'react-icons/fi'\r\n\r\nclass UnansweredQuestion extends Component {\r\n\r\n  state = {\r\n    selectedOption: '',\r\n    toAnsweredQuestion: false\r\n  }\r\n\r\n  handleOptionChange = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      selectedOption: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const { dispatch, question, authedUser } = this.props\r\n    const { selectedOption } = this.state\r\n\r\n    dispatch(handleAnswerQuestion({\r\n      authedUser,\r\n      qid: question.id,\r\n      answer: selectedOption\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    const { question, mode } = this.props\r\n    const { selectedOption } = this.state\r\n\r\n    if (question === null) {\r\n      return <p> This question does not exist </p>\r\n    }\r\n\r\n    const { id, name, avatar, timestamp, optionOne, optionTwo } = question \r\n\r\n    return (\r\n        <div>\r\n          <div className=\"card card-question my-2\">\r\n            <div className=\"maximize-div\">\r\n              {\r\n                mode === 'max'\r\n                  ? <Link to='/home'>\r\n                      <FiMinimize2 className=\"maximize-icon\" />\r\n                    </Link>\r\n                  : <Link to={`/question/${id}`}>\r\n                      <FiExternalLink className=\"maximize-icon\" />\r\n                    </Link>\r\n              }\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"question-header\"> \r\n                <img \r\n                  src={avatar}\r\n                  alt={`Avatar of ${name}`}\r\n                  className='avatar'\r\n                />\r\n                <div className=\"header-info\">\r\n                  <span>\r\n                    {name}'s question\r\n                  </span>\r\n                  <div>at {formatDate(timestamp)}</div> \r\n                </div>\r\n              </div>   \r\n              <h3>Would You Rather ...</h3>\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  block\r\n                  value=\"optionOne\"\r\n                  checked={selectedOption === 'optionOne'}\r\n                  onClick={this.handleOptionChange}>\r\n                  {optionOne.text}\r\n                </Button>\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  block\r\n                  value=\"optionOne\"\r\n                  checked={selectedOption === 'optionOne'}\r\n                  onClick={this.handleOptionChange}>\r\n                  {optionTwo.text} \r\n                </Button>\r\n                <Button \r\n                  type=\"submit\"\r\n                  className=\"new-question-button\"\r\n                  variant=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                  disabled={selectedOption === ''}>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({authedUser, users, questions}, { id, mode }) {\r\n  const question = questions[id]\r\n  return {\r\n    authedUser,\r\n    mode,\r\n    question: question\r\n      ? formatQuestion(question, users[question.author])\r\n      : null\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(UnansweredQuestion))","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UnansweredQuestion from './UnansweredQuestion'\r\n\r\nclass UnansweredQuestionPage extends Component {\r\n  render() {\r\n    return (\r\n        <ul>\r\n        {\r\n          this.props.unanswered_questionIds.map((id) => (\r\n            <li key={id}>\r\n              <UnansweredQuestion id={id} mode='min' />\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({authedUser, users, questions }) {\r\n  const unanswered_questions = Object.keys(questions)\r\n    .filter(question => !Object.keys(users[authedUser].answers).includes(question))\r\n  return {\r\n    unanswered_questionIds: unanswered_questions\r\n      .sort((a, b) => questions[b].timestamp - questions[a].timestamp)   \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UnansweredQuestionPage)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport AnsweredQuestionPage from './AnsweredQuestionPage'\r\nimport UnansweredQuestionPage from './UnansweredQuestionPage'\r\nimport { Nav } from 'react-bootstrap'\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    showing: \"unanswered\"\r\n  }\r\n\r\n  handleSwitchTab = (e) => {\r\n    this.setState(() => ({\r\n      showing: e\r\n    })\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { showing } = this.state\r\n\r\n    return (\r\n      <div className=\"col-sm-11 col-md-9 col-lg-7 mx-auto dashboard\">\r\n        <Nav \r\n          fill\r\n          variant=\"tabs\"\r\n          className=\"dashboard-nav\"\r\n          onSelect={this.handleSwitchTab}>\r\n          <Nav.Item>\r\n            <Nav.Link \r\n              eventKey=\"unanswered\"\r\n              className=\"dashboard-nav-item\"\r\n              active={showing === 'unanswered'}>\r\n              Unanswered Questions\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link \r\n              eventKey=\"answered\"\r\n              className=\"dashboard-nav-item\"\r\n              active={showing === 'answered'}>\r\n              Answered Questions\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        <div>\r\n          {\r\n            showing === \"unanswered\"\r\n              ? <UnansweredQuestionPage />\r\n              : <AnsweredQuestionPage />\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(Dashboard)","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\r\n\r\nexport function setAuthedUser (id) {\r\n  return {\r\n    type: SET_AUTHED_USER,\r\n    id\r\n  }\r\n}\r\n\r\nexport function handleSignIn(id) {\r\n  return (dispatch) => {\r\n    return(dispatch(setAuthedUser(id)))\r\n  }\r\n}\r\n\r\nexport function handleSignOut() {\r\n  return (dispatch) => {\r\n    return(dispatch(setAuthedUser('')))\r\n  }\r\n}","import { getInitialData } from '../utils/api'\r\nimport { receiveUsers} from './users'\r\nimport { receiveQuestions } from './questions'\r\nimport { setAuthedUser } from './authedUser'\r\nimport {showLoading, hideLoading} from  'react-redux-loading'\r\n\r\nconst AUTHED_ID = ''\r\n\r\nexport function handleInitialData() {\r\n  return (dispatch) => {\r\n    dispatch(showLoading())\r\n    return getInitialData()\r\n      .then(({ users, questions }) => {\r\n        dispatch(receiveUsers(users))\r\n        dispatch(receiveQuestions(questions))\r\n        dispatch(setAuthedUser(AUTHED_ID))\r\n        dispatch(hideLoading())\r\n      })\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleAddQuestion } from '../actions/questions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nclass NewQuestion extends Component {\r\n  \r\n  state = {\r\n    optionOne: '',\r\n    optionTwo: '',\r\n    toHome: false\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const text = e.target.value\r\n    if (e.target.id === 'optionOne') {\r\n      this.setState(() => ({\r\n        ...this.state,\r\n        optionOne: text,\r\n\r\n      }))\r\n    }\r\n    else {\r\n      this.setState(() => ({\r\n        ...this.state,\r\n        optionTwo: text\r\n      }))\r\n    }\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const { optionOne, optionTwo } = this.state\r\n    const { dispatch, id } = this.props\r\n\r\n    dispatch(handleAddQuestion(optionOne, optionTwo))\r\n\r\n    this.setState(() => ({\r\n      optionOne: '',\r\n      optionTwo: '',\r\n      toHome: id ? false : true,\r\n    }))\r\n  }\r\n\r\n  render() {\r\n\r\n    const { optionOne, optionTwo, toHome } = this.state\r\n\r\n    if (toHome === true) {\r\n      return <Redirect to='/home' />\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-sm-11 col-md-9 col-lg-7 mx-auto\">\r\n        <div className=\"card card-question my-3\">\r\n          <div className=\"card-body\">\r\n            <div className=\"question-header\">\r\n            </div>\r\n            <h4 className=\"card-title text-center\">Would you rather ...</h4>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Option One\"\r\n                id=\"optionOne\"\r\n                value={optionOne}\r\n                onChange={this.handleChange} />\r\n              <hr className=\"my-4\"/>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Option Two\"\r\n                id=\"optionTwo\"\r\n                value={optionTwo}\r\n                onChange={this.handleChange} />\r\n              <Button \r\n                type=\"submit\"\r\n                className=\"new-question-button\"\r\n                variant=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                disabled={optionOne === '' || optionTwo === ''}>\r\n                Create New Question\r\n              </Button>\r\n            </Form> \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(NewQuestion)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nclass User extends Component {\r\n  render() {\r\n    const { user } = this.props\r\n    \r\n    if (user === null) {\r\n      return <p> This user does not exist </p>\r\n    }\r\n\r\n    const { name, answers, questions } = user \r\n    const answered = Object.keys(answers).length\r\n    const created = questions.length\r\n    const score  = answered + created\r\n    \r\n    return (\r\n      <div className=\"card card-question my-2 user-card\">\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"col-user-card\">\r\n              <img \r\n                src={user.avatarURL}\r\n                alt={`Avatar of ${name}`}\r\n                className=\"user-avatar\"\r\n              />\r\n            </Col>\r\n            <Col  className=\"col-user-card\" xs=\"6\">\r\n              <h4 className=\" card-title text-center\">{name}</h4>\r\n                Questions Answered: {answered}\r\n                <hr className=\"my-2\"/>\r\n                Questions Created: {created}\r\n            </Col>\r\n            <Col>\r\n              <h4 className=\"text-center\">Score</h4>\r\n              <div className=\"user-score text-center\">\r\n                <p>\r\n                  {score}\r\n                </p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps({authedUser, users}, { id }) {\r\n  const user = users[id]\r\n  return {\r\n    authedUser,\r\n    user: user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(User)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport User from './User'\r\n\r\nclass Leaderboard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"col-sm-11 col-md-9 col-lg-7 mx-auto\">\r\n        <h2 className=\"text-center\">Leaderboard</h2>\r\n        <ul>\r\n          {\r\n            this.props.usersId.map((id) => (\r\n              <li key={id}>\r\n                <User id={id} />\r\n              </li>\r\n            ))\r\n          }\r\n        </ul>      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n  return {\r\n    usersId: Object.keys(users)\r\n      .sort((a, b) => ( Object.keys(users[b].answers).length + users[b].questions.length ) \r\n                      - ( Object.keys(users[a].answers).length + users[a].questions.length ) ) \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleSignIn } from '../actions/authedUser'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Button, Dropdown, DropdownButton } from 'react-bootstrap'\r\n\r\nclass SignInPage extends Component {\r\n\r\n  state = {\r\n    selectedOption: this.props.usernames[0],\r\n    toHome: false,\r\n    toSignUpPage: false\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState(() => ({\r\n      ...this.state,\r\n      selectedOption: e\r\n    }))\r\n  }\r\n\r\n  signIn = (e) => {\r\n    e.preventDefault()\r\n    const { dispatch } = this.props\r\n    const { selectedOption } = this.state\r\n    dispatch(handleSignIn(selectedOption))\r\n    this.setState(() =>({\r\n      selectedOption: '',\r\n      toSignUpPage: false,\r\n      toHome: true\r\n    }))\r\n  }\r\n\r\n  goToSignUp = (e) => {\r\n    e.preventDefault()\r\n    this.setState(() => ({\r\n      selectedOption: '',\r\n      toHome: false,\r\n      toSignUpPage: true\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    const { selectedOption, toHome, toSignUpPage } = this.state\r\n    const { users } = this.props\r\n    if ( toHome === true) {\r\n      return <Redirect to='/home' />\r\n    }\r\n    if ( toSignUpPage === true) {\r\n      return <Redirect to='/signup' />\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n            <div className=\"card card-signin my-5\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title text-center\">Would You Rather?</h5>\r\n                <img\r\n                  src={users[selectedOption].avatarURL}\r\n                  alt={`Avatar of ${selectedOption}`}\r\n                  className=\"signin-avatar\"/>\r\n                <form className=\"form-signin\" onSubmit={this.signIn}>\r\n                  <div className=\"form-label-group\">\r\n                    <DropdownButton\r\n                      title={this.state.selectedOption}\r\n                      variant=\"outline-primary btn-block\">\r\n                      {\r\n                        this.props.usernames.map((username) => (\r\n                          <Dropdown.Item\r\n                            key={username}\r\n                            eventKey={username}\r\n                            value={username}\r\n                            onSelect={this.handleChange}>\r\n                          {username}\r\n                          </Dropdown.Item>\r\n                        ))\r\n                      }\r\n                    </DropdownButton>\r\n                  </div>\r\n                  <Button\r\n                    variant=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                    type=\"submit\">\r\n                    Login\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                    href=\"/signup\"\r\n                    onClick={this.goToSignUp}>\r\n                    Sign Up\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({users}) {\r\n  return {\r\n    usernames: Object.keys(users),\r\n    users\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SignInPage)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter, NavLink } from 'react-router-dom'\r\n\r\nclass Navigation extends Component {\r\n\r\n  render() {\r\n    const { loggedUser } = this.props\r\n\r\n    if ( this.props.location.pathname === '/'\r\n        || this.props.location.pathname === '/signup' ) {\r\n      return <div></div>\r\n    }\r\n     \r\n    return (\r\n      <div className=\"app-nav\"> \r\n        <NavLink \r\n          className=\"app-nav-item\" \r\n          to=\"/home\">\r\n          Home\r\n        </NavLink>\r\n        <NavLink \r\n          className=\"app-nav-item\"\r\n          to=\"/new\">\r\n          New Question\r\n        </NavLink>\r\n        <NavLink \r\n          className=\"app-nav-item\"\r\n          to=\"/leaderboard\">\r\n          Leaderboard\r\n        </NavLink>\r\n        <NavLink \r\n          className=\"app-nav-item\"\r\n          to=\"/signout\">\r\n          Sign Out\r\n        </NavLink>\r\n        <NavLink\r\n          className=\"app-nav-item app-nav-last-item\"\r\n          to=\"#\">\r\n          {loggedUser.name}\r\n          <img \r\n            src={loggedUser.avatarURL}\r\n            alt={`Avatar of ${loggedUser.name}`}\r\n            className='app-nav-avatar'\r\n          />\r\n        </NavLink>\r\n      </div>\r\n    )\r\n  }\r\n} \r\n\r\nfunction mapStateToProps({users, authedUser}) {\r\n  return {\r\n    loggedUser: users[authedUser] \r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Navigation))","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { handleSignIn } from '../actions/authedUser'\r\nimport { connect } from 'react-redux'\r\n\r\nclass SignOut extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(handleSignIn(''))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Redirect to='/' />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(SignOut)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UnansweredQuestion from './UnansweredQuestion'\r\nimport AnsweredQuestion from './AnsweredQuestion'\r\n\r\nclass QuestionPage extends Component {\r\n  render() {\r\n    const { id, isAnswered } = this.props\r\n    \r\n    return (\r\n      <div className=\"col-sm-11 col-md-9 col-lg-7 mx-auto dashboard\">\r\n        { isAnswered === true\r\n            ? <AnsweredQuestion id={id} mode='max' />\r\n            : <UnansweredQuestion id={id} mode='max'/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps ({ authedUser, questions, users}, props) {\r\n  const { id } = props.match.params\r\n  const isAnswered = Object.keys(users[authedUser].answers).includes(id)\r\n  return {\r\n    id,\r\n    isAnswered\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionPage)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { handleAddUser } from '../actions/users'\r\n\r\nclass SignUpPage extends Component {\r\n\r\n  state = {\r\n    username: '',\r\n    name: '',\r\n    avatarURL: '',\r\n    toSignInPage: false\r\n  }\r\n  \r\n  handleChange = (e) => {\r\n    const fieldName = e.target.name\r\n    const fieldValue = e.target.value\r\n    this.setState( () => ({\r\n      ...this.state,\r\n      [fieldName]: fieldValue\r\n    }))\r\n  }\r\n\r\n  signUp = (e) => {\r\n    e.preventDefault()\r\n    const { username, name, avatarURL } = this.state\r\n\r\n    this.props.dispatch(handleAddUser(username, name, avatarURL))\r\n    this.setState(() => ({\r\n      username: '',\r\n      name: '',\r\n      avatarURL: '',\r\n      toSignInPage: true\r\n    }))\r\n  }\r\n  \r\n  render() {\r\n\r\n    if (this.state.toSignInPage === true ) {\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n            <div className=\"card card-signin my-5\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title text-center\">Sign Up</h5>\r\n                <Form className=\"form-signin\" onSubmit={this.signUp}>\r\n                  <Form.Group>\r\n                    <Form.Label>\r\n                      Username\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      onChange={this.handleChange}\r\n                      />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Label>\r\n                      Name\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      onChange={this.handleChange}\r\n                      />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Label>\r\n                      Avatar URL\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"avatarURL\"\r\n                      onChange={this.handleChange}\r\n                      />\r\n                  </Form.Group>                  \r\n                  <Button\r\n                    variant=\"btn btn-lg btn-primary btn-block text-uppercase\"\r\n                    type=\"submit\">\r\n                    Sign Up\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({users}) {\r\n  return {\r\n    usernames: Object.keys(users),\r\n    users\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SignUpPage)","import React, { Component, Fragment } from 'react'\nimport Dashboard from './Dashboard'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { handleInitialData } from '../actions/shared'\nimport NewQuestion from './NewQuestion'\nimport Leaderboard from './Leaderboard'\nimport SignInPage from './SignInPage'\nimport LoadingBar from 'react-redux-loading'\nimport Navigation from './Navigation'\nimport SignOut from './Signout'\nimport QuestionPage from './QuestionPage'\nimport SignUpPage from './SignUpPage'\n\nclass App extends Component {\n  state = {\n    hasError: false\n  }\n\n  componentDidMount() {\n    this.props.dispatch(handleInitialData())\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <Fragment>\n          <LoadingBar />\n          <div>\n            {this.props.loading === true \n            ? null\n            : <div>\n                <Navigation />\n                <Route path='/' exact component={SignInPage} />\n                <Route path='/signout' exact component={SignOut} />\n                <Route path='/home' exact component={Dashboard} />\n                <Route path='/new' exact component={NewQuestion} />\n                <Route path='/question/:id' exact component={QuestionPage} />\n                <Route path='/leaderboard' exact component={Leaderboard} />\n                <Route path='/signup' exact component={SignUpPage} />\n              </div>\n            }\n          </div>\n        </Fragment>\n      </Router>\n    )\n  }\n}\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    loading: authedUser === null,\n    authedUser\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","import { combineReducers } from 'redux'\r\nimport authedUser from './authedUser'\r\nimport questions from './questions'\r\nimport users from './users'\r\nimport {loadingBarReducer} from 'react-redux-loading'\r\n\r\nexport default combineReducers ({\r\n  authedUser,\r\n  questions,\r\n  users,\r\n  loadingBar: loadingBarReducer\r\n})","import { SET_AUTHED_USER } from '../actions/authedUser'\r\n\r\nexport default function authedUser ( state = null, action ) {\r\n  switch (action.type) {\r\n    case SET_AUTHED_USER:\r\n      return action.id\r\n    default:\r\n      return state\r\n  }\r\n}","import { ANSWER_QUESTION, ADD_QUESTION, RECEIVE_QUESTIONS } from '../actions/questions'\r\n\r\nexport default function questions (state = {}, action) {\r\n  switch(action.type) {\r\n    case RECEIVE_QUESTIONS :\r\n      return {\r\n        ...state,\r\n        ...action.questions\r\n      }\r\n    case ADD_QUESTION :\r\n      return {\r\n        ...state,\r\n        [action.question.id]: action.question \r\n      }\r\n    case ANSWER_QUESTION :\r\n      return {\r\n        ...state,\r\n        [action.qid]: {\r\n          ...state[action.qid],\r\n          optionOne: {\r\n            ...state[action.qid].optionOne,\r\n            votes: action.answer === 'optionOne'\r\n            ? state[action.qid].optionOne.votes.concat([action.authedUser])\r\n            : state[action.qid].optionOne.votes\r\n          },\r\n          optionTwo: {\r\n            ...state[action.qid].optionTwo,\r\n            votes: action.answer === 'optionTwo'\r\n            ? state[action.qid].optionTwo.votes.concat([action.authedUser])\r\n            : state[action.qid].optionTwo.votes\r\n          }\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { RECEIVE_USERS, ADD_ANSWER_QUESTION_TO_USER, ADD_QUESTION_CREATED, ADD_USER } from '../actions/users'\r\n\r\nexport default function users (state = {}, action) {\r\n  switch(action.type) {\r\n    case RECEIVE_USERS :\r\n      return {\r\n        ...state,\r\n        ...action.users\r\n      }\r\n    case ADD_QUESTION_CREATED:\r\n      return {\r\n        ...state,\r\n        [action.authedUser]: {\r\n          ...state[action.authedUser],\r\n          questions: state[action.authedUser].questions.concat(action.question)\r\n        }\r\n      }\r\n    case ADD_ANSWER_QUESTION_TO_USER :\r\n      return {\r\n        ...state,\r\n        [action.authedUser] : {\r\n          ...state[action.authedUser],\r\n          answers: {\r\n            ...state[action.authedUser].answers,\r\n            [action.qid]:action.answer\r\n          }\r\n        }\r\n      }\r\n    case ADD_USER:\r\n      return {\r\n        ...state,\r\n        [action.user.id]: action.user\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","const logger = (store) => (next) => (action) => {\r\n  console.group(action.type)\r\n    console.log('The action: ', action)\r\n    const returnValue = next(action)\r\n    console.log('The new state: ', store.getState() )\r\n  console.groupEnd()\r\n  return returnValue\r\n}\r\n\r\nexport default logger","import logger from './logger'\r\nimport thunk from 'redux-thunk'\r\nimport { applyMiddleware } from 'redux'\r\n\r\nexport default applyMiddleware (\r\n  thunk, \r\n  logger,\r\n)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middlewares'\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}